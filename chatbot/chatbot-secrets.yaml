# DB2 CREDENTIALS
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: db2-chatbot
  namespace: chatbot
spec:
  refreshInterval: 1m
  secretStoreRef:
    name: aws-secrets-manager
    kind: ClusterSecretStore
  target:
    name: db2-chatbot
    creationPolicy: Owner
  data:
    - secretKey: db2-chatbot-username
      remoteRef:
        key: sct-a-sae1-eks-db2-crlv
        property: username
    - secretKey: db2-chatbot-password
      remoteRef:
        key: sct-a-sae1-eks-db2-crlv
        property: password
    - secretKey: db2-chatbot-library
      remoteRef:
        key: sct-a-sae1-eks-db2-crlv
        property: library

---
# SYDLEONE CREDENTIALS
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: sydleone-chatbot
  namespace: chatbot
spec:
  refreshInterval: 1m
  secretStoreRef:
    name: aws-secrets-manager
    kind: ClusterSecretStore
  target:
    name: sydleone-chatbot
    creationPolicy: Owner
  data:
    - secretKey: sydleone-chatbot-url
      remoteRef:
        key: sct-a-sae1-eks-sydleone-workflow
        property: url
    - secretKey: sydleone-chatbot-token
      remoteRef:
        key: sct-a-sae1-eks-sydleone-workflow
        property: token

---
# BLIP CREDENTIALS
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: blip-chatbot
  namespace: chatbot
spec:
  refreshInterval: 1m
  secretStoreRef:
    name: aws-secrets-manager
    kind: ClusterSecretStore
  target:
    name: blip-chatbot
    creationPolicy: Owner
  data:
    - secretKey: blip-chatbot-url
      remoteRef:
        key: sct-a-sae1-eks-blip-chatbot
        property: url
    - secretKey: blip-chatbot-username
      remoteRef:
        key: sct-a-sae1-eks-blip-chatbot
        property: username
    - secretKey: blip-chatbot-password
      remoteRef:
        key: sct-a-sae1-eks-blip-chatbot
        property: password
    - secretKey: blip-chatbot-key
      remoteRef:
        key: sct-a-sae1-eks-blip-chatbot
        property: key

---
# SUPPLIER CREDENTIALS
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: supplier-chatbot
  namespace: chatbot
spec:
  refreshInterval: 1m
  secretStoreRef:
    name: aws-secrets-manager
    kind: ClusterSecretStore
  target:
    name: supplier-chatbot
    creationPolicy: Owner
  data:
    - secretKey: supplier-chatbot-url
      remoteRef:
        key: sct-a-sae1-eks-supplier-portal
        property: url
   
---
# POSTGRES BOS CREDENTIALS
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: postgres-bos
  namespace: chatbot
spec:
  refreshInterval: 1m
  secretStoreRef:
    name: aws-secrets-manager
    kind: ClusterSecretStore
  target:
    name: postgres-bos
    creationPolicy: Owner
  data:
    - secretKey: postgres-bos-url
      remoteRef:
        key: sct-a-sae1-eks-postgres-bos
        property: url
    - secretKey: postgres-bos-port
      remoteRef:
        key: sct-a-sae1-eks-postgres-bos
        property: port
    - secretKey: postgres-bos-database
      remoteRef:
        key: sct-a-sae1-eks-postgres-bos
        property: database
    - secretKey: postgres-bos-username
      remoteRef:
        key: sct-a-sae1-eks-postgres-bos
        property: username
    - secretKey: postgres-bos-password
      remoteRef:
        key: sct-a-sae1-eks-postgres-bos
        property: password 


---
# POSTGRES SERVICES CREDENTIALS
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: postgres-services
  namespace: chatbot
spec:
  refreshInterval: 1m
  secretStoreRef:
    name: aws-secrets-manager
    kind: ClusterSecretStore
  target:
    name: postgres-services
    creationPolicy: Owner
  data:
    - secretKey: postgres-services-url
      remoteRef:
        key: sct-a-sae1-eks-postgres-services
        property: url
    - secretKey: postgres-services-port
      remoteRef:
        key: sct-a-sae1-eks-postgres-services
        property: port
    - secretKey: postgres-services-database
      remoteRef:
        key: sct-a-sae1-eks-postgres-services
        property: database
    - secretKey: postgres-services-username
      remoteRef:
        key: sct-a-sae1-eks-postgres-services
        property: username
    - secretKey: postgres-services-password
      remoteRef:
        key: sct-a-sae1-eks-postgres-services
        property: password


---
# RMT(TICKETLOG) API CREDENTIALS
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: rmt-ticketlog-api
  namespace: chatbot
spec:
  refreshInterval: 1m
  secretStoreRef:
    name: aws-secrets-manager
    kind: ClusterSecretStore
  target:
    name: rmt-ticketlog-api
    creationPolicy: Owner
  data:
    - secretKey: rmt-ticketlog-api-url
      remoteRef:
        key: sct-a-sae1-eks-api-rmt-ticketlog
        property: url
    - secretKey: rmt-ticketlog-api-username
      remoteRef:
        key: sct-a-sae1-eks-api-rmt-ticketlog
        property: username
    - secretKey: rmt-ticketlog-api-password
      remoteRef:
        key: sct-a-sae1-eks-api-rmt-ticketlog
        property: password